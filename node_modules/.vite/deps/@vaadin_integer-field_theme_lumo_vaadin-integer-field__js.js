import {
  NumberField
} from "./chunk-M37J4N34.js";
import "./chunk-XDWGQIPP.js";
import "./chunk-SKW7YDFR.js";
import "./chunk-DEWPIKLJ.js";
import "./chunk-O2SM2WC2.js";
import "./chunk-RVUVS4DM.js";
import "./chunk-QQHZ2G6C.js";
import "./chunk-67AQUJJH.js";
import "./chunk-5THRPDE7.js";
import "./chunk-3TE4RCOL.js";
import "./chunk-NEGQSXRC.js";
import "./chunk-26L5GZ27.js";
import "./chunk-37YVODLE.js";
import "./chunk-2FVEPLVQ.js";
import "./chunk-SG4ORNH2.js";
import "./chunk-IZJSXIPS.js";
import "./chunk-PVLUQVE7.js";
import "./chunk-LUEFNUZH.js";
import "./chunk-IOVQFHDT.js";
import "./chunk-ZCT3SKJI.js";
import "./chunk-IFCXKWCQ.js";
import "./chunk-XKPFHVYZ.js";
import "./chunk-7OTQVW5F.js";
import "./chunk-4VEDPKK7.js";
import "./chunk-VUWTYCVF.js";
import "./chunk-ZSBTYFKZ.js";
import "./chunk-CQH3N2QY.js";
import "./chunk-PE62AVRK.js";
import "./chunk-A5QYNKPK.js";
import "./chunk-NCN7ELFS.js";
import "./chunk-CJPRR7ZF.js";
import "./chunk-23T3EHLO.js";
import "./chunk-ETJWMQDB.js";
import "./chunk-NMW7U26J.js";
import "./chunk-DFW2W2Z7.js";
import "./chunk-STCAHPR7.js";
import "./chunk-3DC23DJ2.js";
import "./chunk-ICHAVHAS.js";

// node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  constructor() {
    super();
    this.allowedCharPattern = "[-+\\d]";
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(step, inputElement) {
    if (step != null && !this.__hasOnlyDigits(step)) {
      console.warn(
        `<vaadin-integer-field> The \`step\` property must be a positive integer but \`${step}\` was provided, so the property was reset to \`null\`.`
      );
      this.step = null;
      return;
    }
    super._stepChanged(step, inputElement);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d+$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_integer-field_theme_lumo_vaadin-integer-field__js.js.map
